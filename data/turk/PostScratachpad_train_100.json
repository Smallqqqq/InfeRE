{"translation": {"en": "lines with number followed by capital letter before lower-case letter", "regex": "result1=concat(<num>,<cap>,<low>)"}}{"translation": {"en": "lines containing at least 1 instance fo the string <M0> , or the string <M1> preceding the string <M2>", "regex": "result1=repeatatleast(<m0>,1) <STEP> result2=concat(<m1>,<m2>) <STEP> result3=or(result1,result2)"}}{"translation": {"en": "lines with a character , number , capital letter", "regex": "result1=or(<any>,<num>,<cap>) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines with lower-case letter followed by character before string <M0>", "regex": "result1=concat(<low>,<any>,<m0>)"}}{"translation": {"en": "lines with a vowel preceding a numeral or a character .", "regex": "result1=or(<any>,<num>) <STEP> result2=concat(<vow>,result1)"}}{"translation": {"en": "lines with words with a letter", "regex": "result1=contain(<let>) <STEP> result2=star(result1)"}}{"translation": {"en": "lines with words containing <M0> , a ltter , or a vowel .", "regex": "result1=or(<vow>,<let>,<m0>)"}}{"translation": {"en": "lines that do not have the string <M0> nor the string <M1>", "regex": "result1=and(<m0>,<m1>) <STEP> result2=not(result1)"}}{"translation": {"en": "lines with words with the string <M0> , a capital letter , and the string <M1> in them", "regex": "result1=and(<m0>,<cap>,<m1>)"}}{"translation": {"en": "lines with words with a character , lower-case letter , or number", "regex": "result1=or(<any>,<low>,<num>)"}}{"translation": {"en": "lines with characters or a capital letter , before the string <M0>", "regex": "result1=or(<any>,<cap>) <STEP> result2=star(result1) <STEP> result3=concat(result2,<m0>)"}}{"translation": {"en": "lines not having letter , vowel , or string <M0>", "regex": "result1=or(<let>,<vow>,<m0>) <STEP> result2=not(result1)"}}{"translation": {"en": "lines with words with string <M0> followed by string <M1> , zero or more times", "regex": "result1=concat(<m0>,<m1>) <STEP> result2=star(result1)"}}{"translation": {"en": "lines with a letter or string <M0> before lower-case letter", "regex": "result1=or(<let>,<m0>) <STEP> result2=concat(result1,<low>)"}}{"translation": {"en": "lines with an upper case letter , <M0> , or <M1> preceding a letter .", "regex": "result1=or(<cap>,<m0>,<m1>) <STEP> result2=concat(result1,<let>)"}}{"translation": {"en": "lines with either the string <M0> before a character , or the string <M1> before a vowel or lower-case letter", "regex": "result1=concat(<m0>,<any>) <STEP> result2=or(result1,<m1>,<vow>,<low>)"}}{"translation": {"en": "lines without a letter , string <M0> , or vowel", "regex": "result1=and(<let>,<m0>,<vow>) <STEP> result2=not(result1)"}}{"translation": {"en": "lines with zero or more of the strings <M0> and <M1>", "regex": "result1=and(<m0>,<m1>) <STEP> result2=contain(result1) <STEP> result3=star(result2)"}}{"translation": {"en": "lines with a character or capital letter before vowel", "regex": "result1=or(<any>,<cap>) <STEP> result2=concat(result1,<vow>)"}}{"translation": {"en": "lines ending with a capital letter or by number", "regex": "result1=or(<cap>,<num>) <STEP> result2=star(result1) <STEP> result3=endwith(result2)"}}{"translation": {"en": "lines ending in numbers .", "regex": "result1=endwith(<let>) <STEP> result2=concat(result1,<num>)"}}{"translation": {"en": "lines that have the word <M0> , a capital letter , or a number preceding the word <M1>", "regex": "result1=or(<m0>,<num>,<cap>) <STEP> result2=concat(result1,<m1>)"}}{"translation": {"en": "lines with the string <M0> and a number preceding an uppercase letter", "regex": "result1=and(<m0>,<num>) <STEP> result2=concat(result1,<cap>)"}}{"translation": {"en": "lines with zero or more vowels before a letter or the string <M0>", "regex": "result1=star(<vow>) <STEP> result2=or(<let>,<m0>) <STEP> result3=concat(result1,result2)"}}{"translation": {"en": "lines with words containing a vowel , <M0> and a character .", "regex": "result1=and(<vow>,<m0>,<any>)"}}{"translation": {"en": "lines with the string <M0> and not ending in a character", "regex": "result1=endwith(<any>) <STEP> result2=not(result1) <STEP> result3=concat(<m0>,result2)"}}{"translation": {"en": "lines having either the string <M0> or the string <M1> , before a letter", "regex": "result1=or(<low>,<m0>,<m1>) <STEP> result2=concat(result1,<let>)"}}{"translation": {"en": "lines containing the string <M0> following by the string <M1> before a character once or more times", "regex": "result1=concat(<m1>,<any>) <STEP> result2=repeatatleast(result1,1) <STEP> result3=concat(<m0>,result2)"}}{"translation": {"en": "lines with lower-case letter at least once before character or  string <M0>", "regex": "result1=repeatatleast(<low>,1) <STEP> result2=or(<any>,<m0>) <STEP> result3=concat(result1,result2)"}}{"translation": {"en": "lines having a lower-case letter before a character or a letter", "regex": "result1=or(<any>,<let>) <STEP> result2=star(result1) <STEP> result3=concat(<low>,result2)"}}{"translation": {"en": "lines with a vowel , a number , and the string <M0>", "regex": "result1=and(<vow>,<num>,<m0>) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines ending with capital letter or character", "regex": "result1=or(<cap>,<any>) <STEP> result2=endwith(result1)"}}{"translation": {"en": "lines which are with words with the string <M0> , a capital letter , and the string <M1> at least once", "regex": "result1=and(<m0>,<cap>,<m1>) <STEP> result2=repeatatleast(result1,1)"}}{"translation": {"en": "lines with capital letter or letter before character", "regex": "result1=or(<cap>,<let>) <STEP> result2=concat(result1,<any>)"}}{"translation": {"en": "lines without <M0> .", "regex": "result1=contain(<m0>) <STEP> result2=not(result1)"}}{"translation": {"en": "lines ending with a number before a letter", "regex": "result1=endwith(<num>) <STEP> result2=concat(result1,<any>)"}}{"translation": {"en": "lines with works containing a small letter at least twice .", "regex": "result1=repeatatleast(<low>,2)"}}{"translation": {"en": "lines with a capital , lower-case , letter", "regex": "result1=or(<low>,<let>) <STEP> result2=concat(<cap>,result1)"}}{"translation": {"en": "lines with 7 or more vowels before a character", "regex": "result1=repeatatleast(<vow>,7) <STEP> result2=concat(result1,<any>)"}}{"translation": {"en": "lines with the string <M0> or capital letter before a vowel", "regex": "result1=or(<m0>,<cap>) <STEP> result2=concat(result1,<vow>)"}}{"translation": {"en": "lines with words that don't have vowel before string <M0>", "regex": "result1=not(<vow>) <STEP> result2=concat(result1,<m0>)"}}{"translation": {"en": "lines with words of only a number", "regex": "result1=contain(<num>)"}}{"translation": {"en": "lines starting with a capital or lower-case letter", "regex": "result1=or(<cap>,<low>) <STEP> result2=startwith(result1)"}}{"translation": {"en": "lines that contain the string <M0> or a letter followed by a capital letter", "regex": "result1=or(<m0>,<let>) <STEP> result2=concat(result1,<cap>)"}}{"translation": {"en": "lines with a capital before a lower-case letter before the string <M0> or a letter", "regex": "result1=or(<m0>,<let>) <STEP> result2=concat(<cap>,<low>,result1)"}}{"translation": {"en": "lines with a numeral preceding <M0> and a letter .", "regex": "result1=and(<let>,<m0>) <STEP> result2=concat(<num>,result1)"}}{"translation": {"en": "lines that have 4 or more uppercase letters", "regex": "result1=repeatatleast(<cap>,4) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines containing a number or a capital letter , 2 or more times", "regex": "result1=or(<num>,<cap>) <STEP> result2=repeatatleast(result1,2)"}}{"translation": {"en": "lines with 3 or less of a number and character", "regex": "result1=not(<num>) <STEP> result2=repeatatleast(<any>,3) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines with words with either string <M0> , vowel , or string <M1>", "regex": "result1=or(<m0>,<vow>,<m1>)"}}{"translation": {"en": "lines without a capital letter and <M0>", "regex": "result1=and(<cap>,<m0>) <STEP> result2=not(result1) <STEP> result3=contain(result2)"}}{"translation": {"en": "lines with a lower-case letter starting with the string <M0>", "regex": "result1=repeatatleast(<low>,1) <STEP> result2=startwith(<m0>) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines with a character starting in a number", "regex": "result1=contain(<any>) <STEP> result2=startwith(<num>) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines with 6 or more of a letter before a vowel", "regex": "result1=concat(<let>,<vow>) <STEP> result2=repeatatleast(result1,6)"}}{"translation": {"en": "lines which are not ending with the string <M0> , 4 or more times", "regex": "result1=endwith(<m0>) <STEP> result2=repeatatleast(result1,4) <STEP> result3=not(result2)"}}{"translation": {"en": "lines with words with vowel followed by string <M0> and number", "regex": "result1=concat(<vow>,<m0>) <STEP> result2=and(result1,<num>)"}}{"translation": {"en": "lines containing a letter followed by at least 1 lower-case letter", "regex": "result1=contain(<low>) <STEP> result2=repeatatleast(result1,1) <STEP> result3=concat(<let>,result2)"}}{"translation": {"en": "lines with an upper case letter , a numeral , or a character .", "regex": "result1=or(<cap>,<any>,<num>) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines with a zero or more vowels or a lower-case letter", "regex": "result1=star(<vow>) <STEP> result2=or(result1,<low>) <STEP> result3=contain(result2)"}}{"translation": {"en": "lines starting with either a number or a capital letter followed by <M0> 4 times", "regex": "result1=concat(<cap>,<m0>) <STEP> result2=or(<num>,result1) <STEP> result3=repeatatleast(result2,4)"}}{"translation": {"en": "lines starting with a number before the string <M0>", "regex": "result1=startwith(<num>) <STEP> result2=repeatatleast(result1,1) <STEP> result3=concat(result2,<m0>)"}}{"translation": {"en": "lines with the string <M0> ending in letter", "regex": "result1=contain(<m0>) <STEP> result2=endwith(<let>) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines containing words with the string <M0> , zero or more times", "regex": "result1=star(<m0>)"}}{"translation": {"en": "lines with a numeral preceding <M0> preceding <M1> .", "regex": "result1=concat(<num>,<m0>,<m1>)"}}{"translation": {"en": "lines in which a letter comes before a capital letter", "regex": "result1=concat(<let>,<cap>) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines which are ending with words with starting with a characte", "regex": "result1=startwith(<any>) <STEP> result2=endwith(result1)"}}{"translation": {"en": "lines with <M0> preceding a numeral at least 7 times .", "regex": "result1=concat(<m0>,<num>) <STEP> result2=repeatatleast(result1,7)"}}{"translation": {"en": "lines where a lower case letter follows either a letter , the string <M0> , or the string <M1>", "regex": "result1=or(<let>,<m0>,<m1>) <STEP> result2=concat(result1,<low>)"}}{"translation": {"en": "lines with a lower-case letter or string <M0> and character", "regex": "result1=or(<low>,<m0>) <STEP> result2=and(result1,<any>) <STEP> result3=contain(result2)"}}{"translation": {"en": "lines with either a number , the string <M0> , or a capital letter followed by a lower-case letter", "regex": "result1=or(<num>,<m0>,<cap>) <STEP> result2=concat(result1,<low>)"}}{"translation": {"en": "lines with a character before the string <M0> a letter , or <M1>", "regex": "result1=or(<m0>,<let>,<m1>) <STEP> result2=concat(<any>,result1)"}}{"translation": {"en": "lines with words and a character before string <M0> and <M1>", "regex": "result1=concat(<any>,<m0>) <STEP> result2=and(result1,<m1>)"}}{"translation": {"en": "at least once a capitol letter before the string <M0>", "regex": "result1=repeatatleast(<m0>,1) <STEP> result2=concat(<cap>,result1)"}}{"translation": {"en": "lines with words and 2 or more vowels", "regex": "result1=repeatatleast(<vow>,2) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines with a numeral , a vowel , or a letter preceding <M0> .", "regex": "result1=or(<let>,<vow>,<num>) <STEP> result2=concat(result1,<m0>)"}}{"translation": {"en": "lines which do not contain a letter 4 or more times", "regex": "result1=repeatatleast(<let>,4) <STEP> result2=not(result1)"}}{"translation": {"en": "lines that have a  number followed by a character and the word <M0>", "regex": "result1=and(<any>,<m0>) <STEP> result2=concat(<num>,result1)"}}{"translation": {"en": "lines with a capital letter then a number and no <M0>", "regex": "result1=concat(<cap>,<num>) <STEP> result2=not(<m0>) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines with an upper case letter , <M0> , or a vowel preceding a numeral .", "regex": "result1=or(<m0>,<cap>,<vow>) <STEP> result2=concat(result1,<num>)"}}{"translation": {"en": "lines having a number , a lower-case letter and a letter", "regex": "result1=and(<num>,<low>,<let>) <STEP> result2=contain(result1)"}}{"translation": {"en": "lines containing 6 lower-case letters before the string <M0>", "regex": "result1=repeatatleast(<low>,6) <STEP> result2=concat(result1,<m0>)"}}{"translation": {"en": "lines with 5 or more of a character before a letter", "regex": "result1=concat(<any>,<let>) <STEP> result2=repeatatleast(result1,5)"}}{"translation": {"en": "lines with only 4 or more of the string <M0> or <M1>", "regex": "result1=or(<m0>,<m1>) <STEP> result2=repeatatleast(result1,4)"}}{"translation": {"en": "lines with <M0> or a character 6 times", "regex": "result1=or(<m0>,<any>) <STEP> result2=repeatatleast(result1,6)"}}{"translation": {"en": "lines with <M0> before lower-case letters", "regex": "result1=concat(<let>,<m0>,<low>)"}}{"translation": {"en": "lines with capital letter or number before lower-case letter at least once", "regex": "result1=concat(<num>,<low>) <STEP> result2=or(<cap>,result1) <STEP> result3=repeatatleast(result2,1)"}}{"translation": {"en": "lines that contain a vowel , a lower-case letter , or a letter and a number", "regex": "result1=or(<vow>,<low>,<let>) <STEP> result2=and(result1,<num>) <STEP> result3=contain(result2)"}}{"translation": {"en": "lines starting with words a long with numbers", "regex": "result1=star(<num>) <STEP> result2=startwith(result1)"}}{"translation": {"en": "lines without a small letter , thrice at least .", "regex": "result1=repeatatleast(<low>,3) <STEP> result2=not(result1)"}}{"translation": {"en": "lines that have a lowercase letter , a character and a letter", "regex": "result1=and(<low>,<any>,<let>) <STEP> result2=contain(result1)"}}{"translation": {"en": "the lines that have words containing both a character and a capital letter , at least once", "regex": "result1=star(<cap>) <STEP> result2=and(<any>,result1)"}}{"translation": {"en": "lines not having a lower-case letter which is followed by the string <M0>", "regex": "result1=concat(<low>,<m0>) <STEP> result2=not(result1)"}}{"translation": {"en": "lines without the string <M0> or stating in a vowel", "regex": "result1=not(<m0>) <STEP> result2=startwith(<vow>) <STEP> result3=or(result1,result2)"}}{"translation": {"en": "lines containing either a letter , a number , or a character before a vowel", "regex": "result1=or(<let>,<num>,<any>) <STEP> result2=concat(result1,<vow>)"}}{"translation": {"en": "lines with words and a lower-case letter , character , and string <M0>", "regex": "result1=and(<low>,<any>,<m0>)"}}{"translation": {"en": "lines with the string <M0> and <M1> or <M2>", "regex": "result1=contain(<m0>) <STEP> result2=or(<m1>,<m2>) <STEP> result3=and(result1,result2)"}}{"translation": {"en": "lines with character before letter followed by lower-case letter", "regex": "result1=concat(<any>,<let>,<low>)"}}{"translation": {"en": "lines with 7 or mroe of a number before string <M0> or lower-case letter", "regex": "result1=or(<m0>,<low>) <STEP> result2=repeatatleast(result1,7) <STEP> result3=concat(<num>,result2)"}}{"translation": {"en": "lines that begin with a lower-case letter or a capital letter , at least once", "regex": "result1=repeatatleast(<low>,1) <STEP> result2=or(result1,<cap>) <STEP> result3=startwith(result2)"}}{"translation": {"en": "lines with a number before lower-case letter then string <M0>", "regex": "result1=not(<m0>) <STEP> result2=concat(<num>,<low>,result1)"}}